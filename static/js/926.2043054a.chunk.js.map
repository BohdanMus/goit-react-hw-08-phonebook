{"version":3,"file":"static/js/926.2043054a.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.js","components/GlobalStyle.js","components/ContactList/ContactList.js","components/Filter/Filter.js","components/Loader/Loader.js","pages/Contacts.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Form as FormikForm, ErrorMessage as FormikErrorMessage } from 'formik';\n\nexport const Form = styled(FormikForm)`\n  width: 400px;\n  padding: 16px;\n  border: 1px solid black;\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n  margin: 20px 0px;\n`;\nexport const ErrorMessage = styled(FormikErrorMessage)`\n  font-size: 14px;\n  color: red;\n`;\n","import { Formik, Field } from 'formik';\nimport { Form, ErrorMessage } from './ContactForm.styled';\nimport * as Yup from 'yup';\nimport { nanoid } from 'nanoid';\nimport PropTypes from 'prop-types';\n\nconst FormSchema = Yup.object().shape({\n  name: Yup.string().required('Required field!'),\n  number: Yup.number().positive('Must be > 0!').required('Required field!'),\n});\n\nexport const ContactForm = ({ onAdd }) => {\n  return (\n    <Formik\n      initialValues={{\n        name: '',\n        number: '',\n      }}\n      onSubmit={(values, actions) => {\n        onAdd({ ...values, id: nanoid() });\n        actions.resetForm();\n      }}\n      validationSchema={FormSchema}\n    >\n      <Form>\n        <label>Name</label>\n        <Field name=\"name\" />\n        <ErrorMessage name=\"name\" component=\"span\" />\n        <label>Number</label>\n        <Field type=\"tel\" name=\"number\" required />\n        <ErrorMessage name=\"number\" component=\"span\" />\n        <button type=\"submit\">Add contact</button>\n      </Form>\n    </Formik>\n  );\n};\n\nContactForm.propTypes = {\n  onAdd: PropTypes.func.isRequired,\n};\n","import { createGlobalStyle } from 'styled-components';\nexport const GlobalStyle = createGlobalStyle`\n  a {\n  text-decoration: none;\n  color: inherit;\n  cursor: pointer;\n}\n\nul {\n  margin: 0;\n  padding: 0;\n}\n\nli {\n  list-style: none;\n  text-decoration: none;\n  color: inherit;\n  display: flex;\n  align-items: baseline;\n  margin: 16px 0px;\n}\n\nh1,\nh3,\nh4,\nh5,\nh6,\np {\n  margin: 0;\n}\n\nimg {\n  display: block;\n  max-width: 100%;\n  height: auto;\n}\n\nbutton {\n  border: none;\n  cursor: pointer;\n}\n\n* {\n  box-sizing: border-box;\n}\nbody {\n  font-family: 'Roboto', sans-serif;\n  background-color: #ffffff;\n  position: relative;\n    min-height: 100vh;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    padding: 50px;\n}\nbutton {\n  margin: 8px;\n  padding: 8px 8px;\n  border: none;\n  border-radius: 16px;\n  color: white;\n  font-size: inherit;\n  background-color: green;\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  :hover {background: #239B56}\n  }\ninput {\n  padding: 4px; \n  margin: 8px 0px;\n}\nspan {\n  font-weight: 600;\n}\n`;\n","import PropTypes from 'prop-types';\nimport { RiDeleteBin2Line } from 'react-icons/ri';\n\nexport const ContactList = ({ contacts, onDelete }) => {\n  return (\n    <ul>\n      {contacts.map(contact => {\n        return (\n          <li key={contact.id}>\n            <p>\n              {contact.name}: <span>{contact.number}</span>\n            </p>\n            <button type=\"button\" onClick={() => onDelete(contact.id)}>\n              <RiDeleteBin2Line />\n            </button>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.array.isRequired,\n  onDelete: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\n\nexport const Filter = ({ filter, onChangeInput }) => {\n  return (\n    <label>\n      Find contacts by name\n      <br />\n      <input\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        onChange={onChangeInput}\n      />\n    </label>\n  );\n};\n\nFilter.propTypes = {\n  filter: PropTypes.string,\n  onChangeInput: PropTypes.func.isRequired,\n};\n","import { ThreeDots } from 'react-loader-spinner';\n\nexport const Loader = () => {\n  return (\n    <ThreeDots\n      height=\"80\"\n      width=\"80\"\n      radius=\"9\"\n      color=\"#4fa94d\"\n      ariaLabel=\"three-dots-loading\"\n      wrapperStyle={{ justifyContent: 'left' }}\n      wrapperClassName=\"loader\"\n      visible={true}\n    />\n  );\n};\n","import { ContactForm } from '../components/ContactForm/ContactForm';\nimport { GlobalStyle } from '../components/GlobalStyle';\nimport { ContactList } from '../components/ContactList/ContactList';\nimport { Filter } from '../components/Filter/Filter';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setFilter } from 'redux/contacts/filterSlice';\nimport { Loader } from '../components/Loader/Loader';\nimport {\n  fetchContacts,\n  addContact,\n  deleteContact,\n} from 'redux/contacts/contactsOperations';\nimport { useEffect } from 'react';\nimport {\n  selectContacts,\n  selectError,\n  selectIsLoading,\n  selectStatusFilter,\n} from 'redux/contacts/ContactsSelectors';\n\nconst Contacts = () => {\n  const contacts = useSelector(selectContacts);\n  const isLoading = useSelector(selectIsLoading);\n  const filter = useSelector(selectStatusFilter);\n  const error = useSelector(selectError);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const doAddContact = newContact => {\n    if (\n      contacts.some(\n        contact => contact.name.toLowerCase() === newContact.name.toLowerCase()\n      )\n    ) {\n      alert(`${newContact.name} is already in contacts`);\n    } else {\n      dispatch(addContact(newContact));\n    }\n  };\n  const doDeleteContact = id => {\n    dispatch(deleteContact(id));\n  };\n\n  const onChangeInput = e => {\n    dispatch(setFilter(e.currentTarget.value));\n  };\n\n  const filterNew = () => {\n    const filteredContacts = contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n    return filteredContacts;\n  };\n  return (\n    <div>\n      <GlobalStyle />\n      <h1>Phonebook</h1>\n      <ContactForm onAdd={doAddContact} />\n      <h2>Contacts</h2>\n      <Filter filter={filter} onChangeInput={onChangeInput} />\n      {isLoading && <Loader />}\n      {error && <p>Oops, something wrong is going on...</p>}\n      <ContactList contacts={filterNew()} onDelete={doDeleteContact} />\n    </div>\n  );\n};\n\nexport default Contacts;\n"],"names":["Form","styled","FormikForm","ErrorMessage","FormikErrorMessage","FormSchema","Yup","shape","name","required","number","positive","ContactForm","onAdd","initialValues","onSubmit","values","actions","id","nanoid","resetForm","validationSchema","component","type","GlobalStyle","createGlobalStyle","ContactList","contacts","onDelete","map","contact","onClick","Filter","filter","onChangeInput","value","onChange","Loader","height","width","radius","color","ariaLabel","wrapperStyle","justifyContent","wrapperClassName","visible","useSelector","selectContacts","isLoading","selectIsLoading","selectStatusFilter","error","selectError","dispatch","useDispatch","useEffect","fetchContacts","newContact","some","toLowerCase","alert","addContact","e","setFilter","currentTarget","includes","deleteContact"],"sourceRoot":""}