{"version":3,"file":"static/js/166.ea3440df.chunk.js","mappings":"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","sources":["components/RefreshLoader/RefreshLoader.js","components/LoginForm/LoginForm.styled.js","components/LoginForm/LoginForm.js","pages/Login.styled.js","pages/Login.js"],"sourcesContent":["import { Grid } from 'react-loader-spinner';\n\nexport const PageLoader = () => {\n  return (\n    <Grid\n      height=\"200\"\n      width=\"200\"\n      color=\"#4fa94d\"\n      ariaLabel=\"grid-loading\"\n      radius=\"12.5\"\n      wrapperStyle={{\n        marginTop: '200px',\n        marginRight: 'auto',\n        marginLeft: 'auto',\n        display: 'block',\n        width: '200px',\n      }}\n      wrapperClass=\"\"\n      visible={true}\n    />\n  );\n};\n","import styled from 'styled-components';\nimport { Form as FormikForm, ErrorMessage as FormikErrorMessage } from 'formik';\n\nexport const Form = styled(FormikForm)`\n  padding: 20px;\n  border: 1px solid black;\n  border-radius: 8px;\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n  margin: 12px auto;\n  @media screen and (min-width: 480px) {\n    width: 400px;\n  }\n`;\nexport const ErrorMessage = styled(FormikErrorMessage)`\n  font-size: 12px;\n  color: red;\n`;\n","import {\n  Button,\n  FormControl,\n  FormLabel,\n  Icon,\n  IconButton,\n  Input,\n  InputGroup,\n  InputLeftElement,\n  InputRightElement,\n} from '@chakra-ui/react';\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { logIn } from 'redux/auth/authOperations';\nimport { GoMail } from 'react-icons/go';\nimport { Si1Password } from 'react-icons/si';\nimport { BiShow, BiHide } from 'react-icons/bi';\nimport { SlLogin } from 'react-icons/sl';\nimport { useAuth } from 'hooks';\nimport { Field, Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { PageLoader } from 'components/RefreshLoader/RefreshLoader';\nimport { ErrorMessage, Form } from './LoginForm.styled';\n\nconst FormSchema = Yup.object().shape({\n  email: Yup.string().email().required('Required field!'),\n  password: Yup.mixed().required('Required field!'),\n});\n\nexport const LoginForm = () => {\n  const dispatch = useDispatch();\n  const { isLoading } = useAuth();\n  const [show, setShow] = useState(false);\n  const handleClick = () => setShow(!show);\n\n  return (\n    <>\n      {isLoading ? (\n        <PageLoader />\n      ) : (\n        <Formik\n          initialValues={{ email: '', password: '' }}\n          validationSchema={FormSchema}\n          onSubmit={(values, actions) => {\n            dispatch(\n              logIn({\n                email: values.email,\n                password: values.password,\n              })\n            );\n            actions.resetForm();\n          }}\n        >\n          {props => {\n            const isErrorEmail = !props.values.email && props.touched.email;\n            const isErrorPassword =\n              !props.values.password && props.touched.password;\n            return (\n              <Form>\n                <Field name=\"email\">\n                  {({ field }) => (\n                    <FormControl isRequired isInvalid={isErrorEmail} mb={3}>\n                      <FormLabel>Email</FormLabel>\n                      <InputGroup>\n                        <Input\n                          {...field}\n                          focusBorderColor=\"#239b56\"\n                          placeholder=\"Enter email\"\n                        />\n                        <InputLeftElement pointerEvents=\"none\">\n                          <Icon as={GoMail} color=\"grey.800\" />\n                        </InputLeftElement>\n                      </InputGroup>\n                    </FormControl>\n                  )}\n                </Field>\n                <ErrorMessage name=\"email\" component=\"div\" />\n                <Field name=\"password\">\n                  {({ field }) => (\n                    <FormControl isRequired isInvalid={isErrorPassword}>\n                      <FormLabel>Password</FormLabel>\n                      <InputGroup size=\"md\">\n                        <Input\n                          {...field}\n                          pr=\"4.5rem\"\n                          type={show ? 'text' : 'password'}\n                          placeholder=\"Enter password\"\n                        />\n                        <InputLeftElement pointerEvents=\"none\">\n                          <Icon as={Si1Password} color=\"grey.800\" />\n                        </InputLeftElement>\n                        <InputRightElement width=\"4.5rem\">\n                          {show ? (\n                            <IconButton\n                              h=\"1.75rem\"\n                              size=\"lg\"\n                              variant=\"ghost\"\n                              icon={<BiShow />}\n                              onClick={handleClick}\n                            ></IconButton>\n                          ) : (\n                            <IconButton\n                              h=\"1.75rem\"\n                              size=\"lg\"\n                              variant=\"ghost\"\n                              icon={<BiHide />}\n                              onClick={handleClick}\n                            ></IconButton>\n                          )}\n                        </InputRightElement>\n                      </InputGroup>\n                    </FormControl>\n                  )}\n                </Field>\n                <ErrorMessage name=\"password\" component=\"div\" />\n                <Button\n                  leftIcon={<SlLogin />}\n                  mt={4}\n                  backgroundColor=\"#239b56\"\n                  colorScheme=\"green\"\n                  isLoading={props.isSubmitting}\n                  type=\"submit\"\n                >\n                  Log in\n                </Button>\n              </Form>\n            );\n          }}\n        </Formik>\n      )}\n    </>\n  );\n};\n","import styled from 'styled-components';\nimport { NavLink as StyledLink } from 'react-router-dom';\n\nexport const Title = styled.h2`\n  font-size: 24px;\n  font-weight: 700;\n  @media screen and (min-width: 320px) and (max-width: 767px) {\n    font-size: 20px;\n  }\n`;\n\nexport const Text = styled.p`\n  font-size: 16px;\n`;\n\nexport const Link = styled(StyledLink)`\n  color: #239b56;\n  font-size: 16px;\n  border-bottom: 1px solid #239b56;\n`;\n","import { LoginForm } from 'components/LoginForm/LoginForm';\nimport { Link, Title } from './Login.styled';\n\nconst Login = () => {\n  return (\n    <div>\n      <Title>Log In</Title>\n      <LoginForm />\n      <p>\n        Don't have an account? <Link to=\"/register\">Sign up</Link>\n      </p>\n    </div>\n  );\n};\n\nexport default Login;\n"],"names":["PageLoader","height","width","color","ariaLabel","radius","wrapperStyle","marginTop","marginRight","marginLeft","display","wrapperClass","visible","Form","styled","FormikForm","ErrorMessage","FormikErrorMessage","FormSchema","Yup","shape","email","required","password","LoginForm","dispatch","useDispatch","isLoading","useAuth","useState","show","setShow","handleClick","initialValues","validationSchema","onSubmit","values","actions","logIn","resetForm","props","isErrorEmail","touched","isErrorPassword","name","field","isRequired","isInvalid","mb","I","focusBorderColor","placeholder","pointerEvents","as","GoMail","component","size","pr","type","Si1Password","h","variant","icon","onClick","leftIcon","mt","backgroundColor","colorScheme","isSubmitting","Title","Link","StyledLink","to"],"sourceRoot":""}